{"ast":null,"code":"import _classCallCheck from \"/Users/rokia/Documents/GitHub/argon-dashboard-pro-angular-v1.3.0/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rokia/Documents/GitHub/argon-dashboard-pro-angular-v1.3.0/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/rokia/Documents/GitHub/argon-dashboard-pro-angular-v1.3.0/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/rokia/Documents/GitHub/argon-dashboard-pro-angular-v1.3.0/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/drawer/ui.drawer.rendering.strategy.shrink.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { animation } from \"./ui.drawer.animation\";\nimport DrawerStrategy from \"./ui.drawer.rendering.strategy\";\nimport $ from \"../../core/renderer\";\nimport { camelize } from \"../../core/utils/inflector\";\n\nvar ShrinkStrategy = /*#__PURE__*/function (_DrawerStrategy) {\n  _inherits(ShrinkStrategy, _DrawerStrategy);\n\n  var _super = _createSuper(ShrinkStrategy);\n\n  function ShrinkStrategy() {\n    _classCallCheck(this, ShrinkStrategy);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ShrinkStrategy, [{\n    key: \"_internalRenderPosition\",\n    value: function _internalRenderPosition(changePositionUsingFxAnimation, whenAnimationCompleted) {\n      var drawer = this.getDrawerInstance();\n      var direction = drawer.calcTargetPosition();\n      var $panel = $(drawer.content());\n\n      var panelSize = this._getPanelSize(drawer.option(\"opened\"));\n\n      var panelOffset = this._getPanelOffset(drawer.option(\"opened\"));\n\n      var revealMode = drawer.option(\"revealMode\");\n\n      if (changePositionUsingFxAnimation) {\n        if (\"slide\" === revealMode) {\n          animation.margin({\n            complete: function complete() {\n              whenAnimationCompleted.resolve();\n            },\n            $element: $panel,\n            duration: drawer.option(\"animationDuration\"),\n            direction: direction,\n            margin: panelOffset\n          });\n        } else if (\"expand\" === revealMode) {\n          animation.size({\n            complete: function complete() {\n              whenAnimationCompleted.resolve();\n            },\n            $element: $panel,\n            duration: drawer.option(\"animationDuration\"),\n            direction: direction,\n            size: panelSize\n          });\n        }\n      } else if (\"slide\" === revealMode) {\n        $panel.css(\"margin\" + camelize(direction, true), panelOffset);\n      } else if (\"expand\" === revealMode) {\n        $panel.css(drawer.isHorizontalDirection() ? \"width\" : \"height\", panelSize);\n      }\n    }\n  }, {\n    key: \"isViewContentFirst\",\n    value: function isViewContentFirst(position, isRtl) {\n      return (isRtl ? \"left\" === position : \"right\" === position) || \"bottom\" === position;\n    }\n  }]);\n\n  return ShrinkStrategy;\n}(DrawerStrategy);\n\nexport default ShrinkStrategy;","map":null,"metadata":{},"sourceType":"module"}