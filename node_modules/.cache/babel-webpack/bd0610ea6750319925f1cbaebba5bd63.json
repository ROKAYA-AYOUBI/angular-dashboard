{"ast":null,"code":"import _classCallCheck from \"/Users/rokia/Documents/GitHub/argon-dashboard-pro-angular-v1.3.0/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rokia/Documents/GitHub/argon-dashboard-pro-angular-v1.3.0/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/rokia/Documents/GitHub/argon-dashboard-pro-angular-v1.3.0/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/Users/rokia/Documents/GitHub/argon-dashboard-pro-angular-v1.3.0/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/rokia/Documents/GitHub/argon-dashboard-pro-angular-v1.3.0/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rokia/Documents/GitHub/argon-dashboard-pro-angular-v1.3.0/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/rokia/Documents/GitHub/argon-dashboard-pro-angular-v1.3.0/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, ContentChildren, QueryList, Component, NgModule } from '@angular/core';\nimport DxMenu from 'devextreme/ui/menu';\nimport { DxComponent, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxiItemComponent, DxoAnimationModule, DxoHideModule, DxoFromModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxoToModule, DxoShowModule, DxiItemModule, DxoShowFirstSubmenuModeModule, DxoDelayModule, DxoShowSubmenuModeModule } from 'devextreme-angular/ui/nested';\n/*!\n * devextreme-angular\n * Version: 21.2.6\n * Build date: Tue Mar 01 2022\n *\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/**\n * The Menu UI component is a panel with clickable items. A click on an item opens a drop-down menu, which can contain several submenus.\n\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'devextreme-angular/core';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nvar DxMenuComponent = /*@__PURE__*/function () {\n  var DxMenuComponent = /*#__PURE__*/function (_DxComponent) {\n    _inherits(DxMenuComponent, _DxComponent);\n\n    var _super = _createSuper(DxMenuComponent);\n\n    function DxMenuComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\n      var _this;\n\n      _classCallCheck(this, DxMenuComponent);\n\n      _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n      _this._watcherHelper = _watcherHelper;\n      _this._idh = _idh;\n\n      _this._createEventEmitters([{\n        subscribe: 'contentReady',\n        emit: 'onContentReady'\n      }, {\n        subscribe: 'disposing',\n        emit: 'onDisposing'\n      }, {\n        subscribe: 'initialized',\n        emit: 'onInitialized'\n      }, {\n        subscribe: 'itemClick',\n        emit: 'onItemClick'\n      }, {\n        subscribe: 'itemContextMenu',\n        emit: 'onItemContextMenu'\n      }, {\n        subscribe: 'itemRendered',\n        emit: 'onItemRendered'\n      }, {\n        subscribe: 'optionChanged',\n        emit: 'onOptionChanged'\n      }, {\n        subscribe: 'selectionChanged',\n        emit: 'onSelectionChanged'\n      }, {\n        subscribe: 'submenuHidden',\n        emit: 'onSubmenuHidden'\n      }, {\n        subscribe: 'submenuHiding',\n        emit: 'onSubmenuHiding'\n      }, {\n        subscribe: 'submenuShowing',\n        emit: 'onSubmenuShowing'\n      }, {\n        subscribe: 'submenuShown',\n        emit: 'onSubmenuShown'\n      }, {\n        emit: 'accessKeyChange'\n      }, {\n        emit: 'activeStateEnabledChange'\n      }, {\n        emit: 'adaptivityEnabledChange'\n      }, {\n        emit: 'animationChange'\n      }, {\n        emit: 'cssClassChange'\n      }, {\n        emit: 'dataSourceChange'\n      }, {\n        emit: 'disabledChange'\n      }, {\n        emit: 'disabledExprChange'\n      }, {\n        emit: 'displayExprChange'\n      }, {\n        emit: 'elementAttrChange'\n      }, {\n        emit: 'focusStateEnabledChange'\n      }, {\n        emit: 'heightChange'\n      }, {\n        emit: 'hideSubmenuOnMouseLeaveChange'\n      }, {\n        emit: 'hintChange'\n      }, {\n        emit: 'hoverStateEnabledChange'\n      }, {\n        emit: 'itemsChange'\n      }, {\n        emit: 'itemsExprChange'\n      }, {\n        emit: 'itemTemplateChange'\n      }, {\n        emit: 'orientationChange'\n      }, {\n        emit: 'rtlEnabledChange'\n      }, {\n        emit: 'selectByClickChange'\n      }, {\n        emit: 'selectedExprChange'\n      }, {\n        emit: 'selectedItemChange'\n      }, {\n        emit: 'selectionModeChange'\n      }, {\n        emit: 'showFirstSubmenuModeChange'\n      }, {\n        emit: 'showSubmenuModeChange'\n      }, {\n        emit: 'submenuDirectionChange'\n      }, {\n        emit: 'tabIndexChange'\n      }, {\n        emit: 'visibleChange'\n      }, {\n        emit: 'widthChange'\n      }]);\n\n      _this._idh.setHost(_assertThisInitialized(_this));\n\n      optionHost.setHost(_assertThisInitialized(_this));\n      return _this;\n    }\n    /**\n     * Specifies the shortcut key that sets focus on the UI component.\n    \n     */\n\n\n    _createClass(DxMenuComponent, [{\n      key: \"accessKey\",\n      get: function get() {\n        return this._getOption('accessKey');\n      },\n      set: function set(value) {\n        this._setOption('accessKey', value);\n      }\n      /**\n       * A Boolean value specifying whether or not the UI component changes its state when interacting with a user.\n      \n       */\n\n    }, {\n      key: \"activeStateEnabled\",\n      get: function get() {\n        return this._getOption('activeStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('activeStateEnabled', value);\n      }\n      /**\n       * Specifies whether adaptive UI component rendering is enabled on small screens. Applies only if the orientation is &apos;horizontal&apos;.\n      \n       */\n\n    }, {\n      key: \"adaptivityEnabled\",\n      get: function get() {\n        return this._getOption('adaptivityEnabled');\n      },\n      set: function set(value) {\n        this._setOption('adaptivityEnabled', value);\n      }\n      /**\n       * Configures UI component visibility animations. This object contains two fields: show and hide.\n      \n       */\n\n    }, {\n      key: \"animation\",\n      get: function get() {\n        return this._getOption('animation');\n      },\n      set: function set(value) {\n        this._setOption('animation', value);\n      }\n      /**\n       * Specifies the name of the CSS class to be applied to the root menu level and all submenus.\n      \n       */\n\n    }, {\n      key: \"cssClass\",\n      get: function get() {\n        return this._getOption('cssClass');\n      },\n      set: function set(value) {\n        this._setOption('cssClass', value);\n      }\n      /**\n       * Binds the UI component to data.\n      \n       */\n\n    }, {\n      key: \"dataSource\",\n      get: function get() {\n        return this._getOption('dataSource');\n      },\n      set: function set(value) {\n        this._setOption('dataSource', value);\n      }\n      /**\n       * Specifies whether the UI component responds to user interaction.\n      \n       */\n\n    }, {\n      key: \"disabled\",\n      get: function get() {\n        return this._getOption('disabled');\n      },\n      set: function set(value) {\n        this._setOption('disabled', value);\n      }\n      /**\n       * Specifies the name of the data source item field whose value defines whether or not the corresponding UI component item is disabled.\n      \n       */\n\n    }, {\n      key: \"disabledExpr\",\n      get: function get() {\n        return this._getOption('disabledExpr');\n      },\n      set: function set(value) {\n        this._setOption('disabledExpr', value);\n      }\n      /**\n       * Specifies the data field whose values should be displayed.\n      \n       */\n\n    }, {\n      key: \"displayExpr\",\n      get: function get() {\n        return this._getOption('displayExpr');\n      },\n      set: function set(value) {\n        this._setOption('displayExpr', value);\n      }\n      /**\n       * Specifies the global attributes to be attached to the UI component&apos;s container element.\n      \n       */\n\n    }, {\n      key: \"elementAttr\",\n      get: function get() {\n        return this._getOption('elementAttr');\n      },\n      set: function set(value) {\n        this._setOption('elementAttr', value);\n      }\n      /**\n       * Specifies whether the UI component can be focused using keyboard navigation.\n      \n       */\n\n    }, {\n      key: \"focusStateEnabled\",\n      get: function get() {\n        return this._getOption('focusStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('focusStateEnabled', value);\n      }\n      /**\n       * Specifies the UI component&apos;s height.\n      \n       */\n\n    }, {\n      key: \"height\",\n      get: function get() {\n        return this._getOption('height');\n      },\n      set: function set(value) {\n        this._setOption('height', value);\n      }\n      /**\n       * Specifies whether or not the submenu is hidden when the mouse pointer leaves it.\n      \n       */\n\n    }, {\n      key: \"hideSubmenuOnMouseLeave\",\n      get: function get() {\n        return this._getOption('hideSubmenuOnMouseLeave');\n      },\n      set: function set(value) {\n        this._setOption('hideSubmenuOnMouseLeave', value);\n      }\n      /**\n       * Specifies text for a hint that appears when a user pauses on the UI component.\n      \n       */\n\n    }, {\n      key: \"hint\",\n      get: function get() {\n        return this._getOption('hint');\n      },\n      set: function set(value) {\n        this._setOption('hint', value);\n      }\n      /**\n       * Specifies whether the UI component changes its state when a user pauses on it.\n      \n       */\n\n    }, {\n      key: \"hoverStateEnabled\",\n      get: function get() {\n        return this._getOption('hoverStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('hoverStateEnabled', value);\n      }\n      /**\n       * Holds an array of menu items.\n      \n       */\n\n    }, {\n      key: \"items\",\n      get: function get() {\n        return this._getOption('items');\n      },\n      set: function set(value) {\n        this._setOption('items', value);\n      }\n      /**\n       * Specifies which data field contains nested items.\n      \n       */\n\n    }, {\n      key: \"itemsExpr\",\n      get: function get() {\n        return this._getOption('itemsExpr');\n      },\n      set: function set(value) {\n        this._setOption('itemsExpr', value);\n      }\n      /**\n       * Specifies a custom template for items.\n      \n       */\n\n    }, {\n      key: \"itemTemplate\",\n      get: function get() {\n        return this._getOption('itemTemplate');\n      },\n      set: function set(value) {\n        this._setOption('itemTemplate', value);\n      }\n      /**\n       * Specifies whether the menu has horizontal or vertical orientation.\n      \n       */\n\n    }, {\n      key: \"orientation\",\n      get: function get() {\n        return this._getOption('orientation');\n      },\n      set: function set(value) {\n        this._setOption('orientation', value);\n      }\n      /**\n       * Switches the UI component to a right-to-left representation.\n      \n       */\n\n    }, {\n      key: \"rtlEnabled\",\n      get: function get() {\n        return this._getOption('rtlEnabled');\n      },\n      set: function set(value) {\n        this._setOption('rtlEnabled', value);\n      }\n      /**\n       * Specifies whether or not an item becomes selected if a user clicks it.\n      \n       */\n\n    }, {\n      key: \"selectByClick\",\n      get: function get() {\n        return this._getOption('selectByClick');\n      },\n      set: function set(value) {\n        this._setOption('selectByClick', value);\n      }\n      /**\n       * Specifies the name of the data source item field whose value defines whether or not the corresponding UI component items is selected.\n      \n       */\n\n    }, {\n      key: \"selectedExpr\",\n      get: function get() {\n        return this._getOption('selectedExpr');\n      },\n      set: function set(value) {\n        this._setOption('selectedExpr', value);\n      }\n      /**\n       * The selected item object.\n      \n       */\n\n    }, {\n      key: \"selectedItem\",\n      get: function get() {\n        return this._getOption('selectedItem');\n      },\n      set: function set(value) {\n        this._setOption('selectedItem', value);\n      }\n      /**\n       * Specifies the selection mode supported by the menu.\n      \n       */\n\n    }, {\n      key: \"selectionMode\",\n      get: function get() {\n        return this._getOption('selectionMode');\n      },\n      set: function set(value) {\n        this._setOption('selectionMode', value);\n      }\n      /**\n       * Specifies properties for showing and hiding the first level submenu.\n      \n       */\n\n    }, {\n      key: \"showFirstSubmenuMode\",\n      get: function get() {\n        return this._getOption('showFirstSubmenuMode');\n      },\n      set: function set(value) {\n        this._setOption('showFirstSubmenuMode', value);\n      }\n      /**\n       * Specifies properties of submenu showing and hiding.\n      \n       */\n\n    }, {\n      key: \"showSubmenuMode\",\n      get: function get() {\n        return this._getOption('showSubmenuMode');\n      },\n      set: function set(value) {\n        this._setOption('showSubmenuMode', value);\n      }\n      /**\n       * Specifies the direction at which the submenus are displayed.\n      \n       */\n\n    }, {\n      key: \"submenuDirection\",\n      get: function get() {\n        return this._getOption('submenuDirection');\n      },\n      set: function set(value) {\n        this._setOption('submenuDirection', value);\n      }\n      /**\n       * Specifies the number of the element when the Tab key is used for navigating.\n      \n       */\n\n    }, {\n      key: \"tabIndex\",\n      get: function get() {\n        return this._getOption('tabIndex');\n      },\n      set: function set(value) {\n        this._setOption('tabIndex', value);\n      }\n      /**\n       * Specifies whether the UI component is visible.\n      \n       */\n\n    }, {\n      key: \"visible\",\n      get: function get() {\n        return this._getOption('visible');\n      },\n      set: function set(value) {\n        this._setOption('visible', value);\n      }\n      /**\n       * Specifies the UI component&apos;s width.\n      \n       */\n\n    }, {\n      key: \"width\",\n      get: function get() {\n        return this._getOption('width');\n      },\n      set: function set(value) {\n        this._setOption('width', value);\n      }\n    }, {\n      key: \"itemsChildren\",\n      get: function get() {\n        return this._getOption('items');\n      },\n      set: function set(value) {\n        this.setChildren('items', value);\n      }\n    }, {\n      key: \"_createInstance\",\n      value: function _createInstance(element, options) {\n        return new DxMenu(element, options);\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._destroyWidget();\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        _get(_getPrototypeOf(DxMenuComponent.prototype), \"ngOnChanges\", this).call(this, changes);\n\n        this.setupChanges('dataSource', changes);\n        this.setupChanges('items', changes);\n      }\n    }, {\n      key: \"setupChanges\",\n      value: function setupChanges(prop, changes) {\n        if (!(prop in this._optionsToUpdate)) {\n          this._idh.setup(prop, changes);\n        }\n      }\n    }, {\n      key: \"ngDoCheck\",\n      value: function ngDoCheck() {\n        this._idh.doCheck('dataSource');\n\n        this._idh.doCheck('items');\n\n        this._watcherHelper.checkWatchers();\n\n        _get(_getPrototypeOf(DxMenuComponent.prototype), \"ngDoCheck\", this).call(this);\n\n        _get(_getPrototypeOf(DxMenuComponent.prototype), \"clearChangedOptions\", this).call(this);\n      }\n    }, {\n      key: \"_setOption\",\n      value: function _setOption(name, value) {\n        var isSetup = this._idh.setupSingle(name, value);\n\n        var isChanged = this._idh.getChanges(name, value) !== null;\n\n        if (isSetup || isChanged) {\n          _get(_getPrototypeOf(DxMenuComponent.prototype), \"_setOption\", this).call(this, name, value);\n        }\n      }\n    }]);\n\n    return DxMenuComponent;\n  }(DxComponent);\n\n  DxMenuComponent.ɵfac = function DxMenuComponent_Factory(t) {\n    return new (t || DxMenuComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IterableDifferHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n\n  DxMenuComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DxMenuComponent,\n    selectors: [[\"dx-menu\"]],\n    contentQueries: function DxMenuComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiItemComponent, 4);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.itemsChildren = _t);\n      }\n    },\n    inputs: {\n      accessKey: \"accessKey\",\n      activeStateEnabled: \"activeStateEnabled\",\n      adaptivityEnabled: \"adaptivityEnabled\",\n      animation: \"animation\",\n      cssClass: \"cssClass\",\n      dataSource: \"dataSource\",\n      disabled: \"disabled\",\n      disabledExpr: \"disabledExpr\",\n      displayExpr: \"displayExpr\",\n      elementAttr: \"elementAttr\",\n      focusStateEnabled: \"focusStateEnabled\",\n      height: \"height\",\n      hideSubmenuOnMouseLeave: \"hideSubmenuOnMouseLeave\",\n      hint: \"hint\",\n      hoverStateEnabled: \"hoverStateEnabled\",\n      items: \"items\",\n      itemsExpr: \"itemsExpr\",\n      itemTemplate: \"itemTemplate\",\n      orientation: \"orientation\",\n      rtlEnabled: \"rtlEnabled\",\n      selectByClick: \"selectByClick\",\n      selectedExpr: \"selectedExpr\",\n      selectedItem: \"selectedItem\",\n      selectionMode: \"selectionMode\",\n      showFirstSubmenuMode: \"showFirstSubmenuMode\",\n      showSubmenuMode: \"showSubmenuMode\",\n      submenuDirection: \"submenuDirection\",\n      tabIndex: \"tabIndex\",\n      visible: \"visible\",\n      width: \"width\"\n    },\n    outputs: {\n      onContentReady: \"onContentReady\",\n      onDisposing: \"onDisposing\",\n      onInitialized: \"onInitialized\",\n      onItemClick: \"onItemClick\",\n      onItemContextMenu: \"onItemContextMenu\",\n      onItemRendered: \"onItemRendered\",\n      onOptionChanged: \"onOptionChanged\",\n      onSelectionChanged: \"onSelectionChanged\",\n      onSubmenuHidden: \"onSubmenuHidden\",\n      onSubmenuHiding: \"onSubmenuHiding\",\n      onSubmenuShowing: \"onSubmenuShowing\",\n      onSubmenuShown: \"onSubmenuShown\",\n      accessKeyChange: \"accessKeyChange\",\n      activeStateEnabledChange: \"activeStateEnabledChange\",\n      adaptivityEnabledChange: \"adaptivityEnabledChange\",\n      animationChange: \"animationChange\",\n      cssClassChange: \"cssClassChange\",\n      dataSourceChange: \"dataSourceChange\",\n      disabledChange: \"disabledChange\",\n      disabledExprChange: \"disabledExprChange\",\n      displayExprChange: \"displayExprChange\",\n      elementAttrChange: \"elementAttrChange\",\n      focusStateEnabledChange: \"focusStateEnabledChange\",\n      heightChange: \"heightChange\",\n      hideSubmenuOnMouseLeaveChange: \"hideSubmenuOnMouseLeaveChange\",\n      hintChange: \"hintChange\",\n      hoverStateEnabledChange: \"hoverStateEnabledChange\",\n      itemsChange: \"itemsChange\",\n      itemsExprChange: \"itemsExprChange\",\n      itemTemplateChange: \"itemTemplateChange\",\n      orientationChange: \"orientationChange\",\n      rtlEnabledChange: \"rtlEnabledChange\",\n      selectByClickChange: \"selectByClickChange\",\n      selectedExprChange: \"selectedExprChange\",\n      selectedItemChange: \"selectedItemChange\",\n      selectionModeChange: \"selectionModeChange\",\n      showFirstSubmenuModeChange: \"showFirstSubmenuModeChange\",\n      showSubmenuModeChange: \"showSubmenuModeChange\",\n      submenuDirectionChange: \"submenuDirectionChange\",\n      tabIndexChange: \"tabIndexChange\",\n      visibleChange: \"visibleChange\",\n      widthChange: \"widthChange\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 0,\n    vars: 0,\n    template: function DxMenuComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  DxMenuComponent = __decorate([__param(7, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, TransferState, Object])], DxMenuComponent);\n  return DxMenuComponent;\n}();\n\nvar DxMenuModule = /*@__PURE__*/function () {\n  var DxMenuModule = /*#__PURE__*/_createClass(function DxMenuModule() {\n    _classCallCheck(this, DxMenuModule);\n  });\n\n  DxMenuModule.ɵfac = function DxMenuModule_Factory(t) {\n    return new (t || DxMenuModule)();\n  };\n\n  DxMenuModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DxMenuModule\n  });\n  DxMenuModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[DxoAnimationModule, DxoHideModule, DxoFromModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxoToModule, DxoShowModule, DxiItemModule, DxoShowFirstSubmenuModeModule, DxoDelayModule, DxoShowSubmenuModeModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule], DxoAnimationModule, DxoHideModule, DxoFromModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxoToModule, DxoShowModule, DxiItemModule, DxoShowFirstSubmenuModeModule, DxoDelayModule, DxoShowSubmenuModeModule, DxTemplateModule]\n  });\n  return DxMenuModule;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxMenuModule, {\n    declarations: function declarations() {\n      return [DxMenuComponent];\n    },\n    imports: function imports() {\n      return [DxoAnimationModule, DxoHideModule, DxoFromModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxoToModule, DxoShowModule, DxiItemModule, DxoShowFirstSubmenuModeModule, DxoDelayModule, DxoShowSubmenuModeModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule];\n    },\n    exports: function exports() {\n      return [DxMenuComponent, DxoAnimationModule, DxoHideModule, DxoFromModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxoToModule, DxoShowModule, DxiItemModule, DxoShowFirstSubmenuModeModule, DxoDelayModule, DxoShowSubmenuModeModule, DxTemplateModule];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DxMenuComponent, DxMenuModule }; //# sourceMappingURL=devextreme-angular-ui-menu.js.map","map":null,"metadata":{},"sourceType":"module"}