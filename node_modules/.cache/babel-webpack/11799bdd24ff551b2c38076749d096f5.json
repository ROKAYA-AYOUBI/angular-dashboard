{"ast":null,"code":"import _classCallCheck from \"/Users/rokia/Documents/GitHub/argon-dashboard-pro-angular-v1.3.0/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rokia/Documents/GitHub/argon-dashboard-pro-angular-v1.3.0/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/rokia/Documents/GitHub/argon-dashboard-pro-angular-v1.3.0/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/rokia/Documents/GitHub/argon-dashboard-pro-angular-v1.3.0/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/rokia/Documents/GitHub/argon-dashboard-pro-angular-v1.3.0/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, Component, NgModule } from '@angular/core';\nimport DxSpeedDialAction from 'devextreme/ui/speed_dial_action';\nimport { DxComponent, DxTemplateHost, WatcherHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\n/*!\n * devextreme-angular\n * Version: 21.2.6\n * Build date: Tue Mar 01 2022\n *\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/**\n * The SpeedDialAction is a button that performs a custom action. It can be represented by a Floating Action Button (FAB) or a button in a speed dial menu opened with the FAB.\n\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'devextreme-angular/core';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nvar DxSpeedDialActionComponent = /*@__PURE__*/function () {\n  var DxSpeedDialActionComponent = /*#__PURE__*/function (_DxComponent) {\n    _inherits(DxSpeedDialActionComponent, _DxComponent);\n\n    var _super = _createSuper(DxSpeedDialActionComponent);\n\n    function DxSpeedDialActionComponent(elementRef, ngZone, templateHost, _watcherHelper, optionHost, transferState, platformId) {\n      var _this;\n\n      _classCallCheck(this, DxSpeedDialActionComponent);\n\n      _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n\n      _this._createEventEmitters([{\n        subscribe: 'click',\n        emit: 'onClick'\n      }, {\n        subscribe: 'contentReady',\n        emit: 'onContentReady'\n      }, {\n        subscribe: 'disposing',\n        emit: 'onDisposing'\n      }, {\n        subscribe: 'initialized',\n        emit: 'onInitialized'\n      }, {\n        subscribe: 'optionChanged',\n        emit: 'onOptionChanged'\n      }, {\n        emit: 'accessKeyChange'\n      }, {\n        emit: 'activeStateEnabledChange'\n      }, {\n        emit: 'elementAttrChange'\n      }, {\n        emit: 'focusStateEnabledChange'\n      }, {\n        emit: 'hintChange'\n      }, {\n        emit: 'hoverStateEnabledChange'\n      }, {\n        emit: 'iconChange'\n      }, {\n        emit: 'indexChange'\n      }, {\n        emit: 'labelChange'\n      }, {\n        emit: 'rtlEnabledChange'\n      }, {\n        emit: 'tabIndexChange'\n      }, {\n        emit: 'visibleChange'\n      }]);\n\n      optionHost.setHost(_assertThisInitialized(_this));\n      return _this;\n    }\n    /**\n     * Specifies the shortcut key that sets focus on the UI component.\n    \n     */\n\n\n    _createClass(DxSpeedDialActionComponent, [{\n      key: \"accessKey\",\n      get: function get() {\n        return this._getOption('accessKey');\n      },\n      set: function set(value) {\n        this._setOption('accessKey', value);\n      }\n      /**\n       * Specifies whether or not the UI component changes its state when interacting with a user.\n      \n       */\n\n    }, {\n      key: \"activeStateEnabled\",\n      get: function get() {\n        return this._getOption('activeStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('activeStateEnabled', value);\n      }\n      /**\n       * Specifies the global attributes to be attached to the UI component&apos;s container element.\n      \n       */\n\n    }, {\n      key: \"elementAttr\",\n      get: function get() {\n        return this._getOption('elementAttr');\n      },\n      set: function set(value) {\n        this._setOption('elementAttr', value);\n      }\n      /**\n       * Specifies whether the UI component can be focused using keyboard navigation.\n      \n       */\n\n    }, {\n      key: \"focusStateEnabled\",\n      get: function get() {\n        return this._getOption('focusStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('focusStateEnabled', value);\n      }\n      /**\n       * Specifies text for a hint that appears when a user pauses on the UI component.\n      \n       */\n\n    }, {\n      key: \"hint\",\n      get: function get() {\n        return this._getOption('hint');\n      },\n      set: function set(value) {\n        this._setOption('hint', value);\n      }\n      /**\n       * Specifies whether the UI component changes its state when a user pauses on it.\n      \n       */\n\n    }, {\n      key: \"hoverStateEnabled\",\n      get: function get() {\n        return this._getOption('hoverStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('hoverStateEnabled', value);\n      }\n      /**\n       * Specifies the icon the FAB or speed dial action button displays.\n      \n       */\n\n    }, {\n      key: \"icon\",\n      get: function get() {\n        return this._getOption('icon');\n      },\n      set: function set(value) {\n        this._setOption('icon', value);\n      }\n      /**\n       * Allows you to reorder action buttons in the speed dial menu.\n      \n       */\n\n    }, {\n      key: \"index\",\n      get: function get() {\n        return this._getOption('index');\n      },\n      set: function set(value) {\n        this._setOption('index', value);\n      }\n      /**\n       * Specifies the text label displayed inside the FAB or near the speed dial action button.\n      \n       */\n\n    }, {\n      key: \"label\",\n      get: function get() {\n        return this._getOption('label');\n      },\n      set: function set(value) {\n        this._setOption('label', value);\n      }\n      /**\n       * Switches the UI component to a right-to-left representation.\n      \n       */\n\n    }, {\n      key: \"rtlEnabled\",\n      get: function get() {\n        return this._getOption('rtlEnabled');\n      },\n      set: function set(value) {\n        this._setOption('rtlEnabled', value);\n      }\n      /**\n       * Specifies the number of the element when the Tab key is used for navigating.\n      \n       */\n\n    }, {\n      key: \"tabIndex\",\n      get: function get() {\n        return this._getOption('tabIndex');\n      },\n      set: function set(value) {\n        this._setOption('tabIndex', value);\n      }\n      /**\n       * Allows you to hide the FAB from the view or the action from the speed dial menu.\n      \n       */\n\n    }, {\n      key: \"visible\",\n      get: function get() {\n        return this._getOption('visible');\n      },\n      set: function set(value) {\n        this._setOption('visible', value);\n      }\n    }, {\n      key: \"_createInstance\",\n      value: function _createInstance(element, options) {\n        return new DxSpeedDialAction(element, options);\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._destroyWidget();\n      }\n    }]);\n\n    return DxSpeedDialActionComponent;\n  }(DxComponent);\n\n  DxSpeedDialActionComponent.ɵfac = function DxSpeedDialActionComponent_Factory(t) {\n    return new (t || DxSpeedDialActionComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n\n  DxSpeedDialActionComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DxSpeedDialActionComponent,\n    selectors: [[\"dx-speed-dial-action\"]],\n    inputs: {\n      accessKey: \"accessKey\",\n      activeStateEnabled: \"activeStateEnabled\",\n      elementAttr: \"elementAttr\",\n      focusStateEnabled: \"focusStateEnabled\",\n      hint: \"hint\",\n      hoverStateEnabled: \"hoverStateEnabled\",\n      icon: \"icon\",\n      index: \"index\",\n      label: \"label\",\n      rtlEnabled: \"rtlEnabled\",\n      tabIndex: \"tabIndex\",\n      visible: \"visible\"\n    },\n    outputs: {\n      onClick: \"onClick\",\n      onContentReady: \"onContentReady\",\n      onDisposing: \"onDisposing\",\n      onInitialized: \"onInitialized\",\n      onOptionChanged: \"onOptionChanged\",\n      accessKeyChange: \"accessKeyChange\",\n      activeStateEnabledChange: \"activeStateEnabledChange\",\n      elementAttrChange: \"elementAttrChange\",\n      focusStateEnabledChange: \"focusStateEnabledChange\",\n      hintChange: \"hintChange\",\n      hoverStateEnabledChange: \"hoverStateEnabledChange\",\n      iconChange: \"iconChange\",\n      indexChange: \"indexChange\",\n      labelChange: \"labelChange\",\n      rtlEnabledChange: \"rtlEnabledChange\",\n      tabIndexChange: \"tabIndexChange\",\n      visibleChange: \"visibleChange\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([DxTemplateHost, WatcherHelper, NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function DxSpeedDialActionComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  DxSpeedDialActionComponent = __decorate([__param(6, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost, WatcherHelper, NestedOptionHost, TransferState, Object])], DxSpeedDialActionComponent);\n  return DxSpeedDialActionComponent;\n}();\n\nvar DxSpeedDialActionModule = /*@__PURE__*/function () {\n  var DxSpeedDialActionModule = /*#__PURE__*/_createClass(function DxSpeedDialActionModule() {\n    _classCallCheck(this, DxSpeedDialActionModule);\n  });\n\n  DxSpeedDialActionModule.ɵfac = function DxSpeedDialActionModule_Factory(t) {\n    return new (t || DxSpeedDialActionModule)();\n  };\n\n  DxSpeedDialActionModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DxSpeedDialActionModule\n  });\n  DxSpeedDialActionModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule], DxTemplateModule]\n  });\n  return DxSpeedDialActionModule;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxSpeedDialActionModule, {\n    declarations: function declarations() {\n      return [DxSpeedDialActionComponent];\n    },\n    imports: function imports() {\n      return [DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule];\n    },\n    exports: function exports() {\n      return [DxSpeedDialActionComponent, DxTemplateModule];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DxSpeedDialActionComponent, DxSpeedDialActionModule }; //# sourceMappingURL=devextreme-angular-ui-speed-dial-action.js.map","map":null,"metadata":{},"sourceType":"module"}